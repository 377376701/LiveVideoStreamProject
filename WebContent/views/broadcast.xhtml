<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml"
	xmlns:ui="http://java.sun.com/jsf/facelets"
	xmlns:h="http://java.sun.com/jsf/html"
	xmlns:f="http://java.sun.com/jsf/core"
	xmlns:p="http://primefaces.org/ui"	
	xmlns:fn="http://java.sun.com/jsp/jstl/functions">
<script src="https://ajax.googleapis.com/ajax/libs/jquery/1.11.3/jquery.min.js"></script>
<h:head>

<h:form>
<p:breadCrumb>
    <p:menuitem value="Categories" url="/faces/views/home.xhtml" />
    <p:menuitem value="YayÄ±nla" url="/faces/views/broadcast.xhtml" />
</p:breadCrumb>
<br/><br/>
</h:form>

	<div>
		<video id="live" width="320" height="240" autoplay="autoplay" style="display: inline;"></video>
		<canvas width="320" id="canvas" height="240" style="display: inline;"></canvas>
	</div>

	<script type="text/javascript">
				var video = $("#live").get()[0];
				var canvas = $("#canvas");
				var ctx = canvas.get()[0].getContext('2d');
				var options = {
				        "video" : true
				 };
             
              // use the chrome specific GetUserMedia function
              navigator.webkitGetUserMedia(options, function(stream) {
                     video.src = webkitURL.createObjectURL(stream);
              }, function(err) {
                     console.log("Unable to get video stream!")
              })
              
              
				var ws = new WebSocket("ws://"+window.location.host +"/LiveVideoStreamProject/livevideo?channelName="+ #{channelView.selectedChannel});
                  ws.onopen = function () {
                            console.log("Openened connection to websocket");
                  }
                                  
                    timer = setInterval(
                        function () {
                            ctx.drawImage(video, 0, 0, 320, 240);
                            var data = canvas.get()[0].toDataURL('image/jpeg', 1.0);
                            newblob = convertToBinary(data);
                            ws.send(newblob);
                        }, getParameterByName("screenFrequency") == "" ? 200 : getParameterByName("screenFrequency"));
   
             
              function convertToBinary (dataURI) {
                  // convert base64 to raw binary data held in a string
                  // doesn't handle URLEncoded DataURIs
                  var byteString = atob(dataURI.split(',')[1]);

                  // separate out the mime component
                  var mimeString = dataURI.split(',')[0].split(':')[1].split(';')[0]

                  // write the bytes of the string to an ArrayBuffer
                  var ab = new ArrayBuffer(byteString.length);
                  var ia = new Uint8Array(ab);
                  for (var i = 0; i &lt; byteString.length; i++){
                      ia[i] = byteString.charCodeAt(i);
                  }

                  // write the ArrayBuffer to a blob, and you're done
                  var bb = new Blob([ab]);
                  return bb;
              }
              
              function getParameterByName(name) {
            	    name = name.replace(/[\[]/, "\\[").replace(/[\]]/, "\\]");
            	    var regex = new RegExp("[\\?&amp;]" + name + "=([^&amp;#]*)"),
            	        results = regex.exec(location.search);
            	    return results === null ? "" : decodeURIComponent(results[1].replace(/\+/g, " "));
            	}
             
</script>

</h:head>
    <p:commandButton value="logout" oncomplete="window.location.href='/LiveVideoStreamProject/faces/views/login.xhtml'"/>
</html>
